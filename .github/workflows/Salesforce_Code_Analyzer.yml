name: Salesforce Code Analyzer

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli@latest

      - name: Install Salesforce Code Analyzer Plugin
        run: sf plugins install code-analyzer@latest

      - name: Run Salesforce Code Analyzer
        id: run-code-analyzer
        uses: forcedotcom/run-code-analyzer@v2.4.0
        with:
          run-arguments: '--target "./" --view detail --output-file sfca_results.json'
          results-artifact-name: salesforce-code-analyzer-results

      - name: Run Salesforce Code Analyzer Scan (SARIF)
        run: sf code-analyzer run --output-file sfca_results.sarif

      - name: Upload SARIF file to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sfca_results.sarif

      # Sev1 kontrol√ºn√º string g√ºvenli yap (bazƒ± runner'larda sayƒ±/string gelebilir)
      - name: Check for high severity violations
        if: ${{ steps.run-code-analyzer.outputs.num-sev1-violations && steps.run-code-analyzer.outputs.num-sev1-violations != '0' }}
        run: |
          echo "‚ùå Found high severity violations (sev1=${{ steps.run-code-analyzer.outputs.num-sev1-violations }}). Please fix before merging."
          exit 1

      # Sadece PR event'inde yorum yaz
      - name: Post Code Analyzer results to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const prNumber = context.payload?.pull_request?.number;
            if (!prNumber) {
              core.notice('No pull_request context. Skipping PR comment.');
              return;
            }
            const path = './sfca_results.sarif';
            if (!fs.existsSync(path)) {
              core.notice('sfca_results.sarif not found. Skipping PR comment.');
              return;
            }
            const results = JSON.parse(fs.readFileSync(path, 'utf8'));
            let message = "### üîé Salesforce Code Analyzer Results\n\n";
            const runs = results.runs || [];
            let count = 0;
            for (const run of runs) {
              for (const r of (run.results || [])) {
                const rule = r.ruleId || "Unknown Rule";
                const severity = r.level || "warning";
                const location = r.locations?.[0]?.physicalLocation?.artifactLocation?.uri || "Unknown file";
                const line = r.locations?.[0]?.physicalLocation?.region?.startLine || "?";
                if (count === 0) {
                  message += "| Severity | Rule | File | Line |\n";
                  message += "|----------|------|------|------|\n";
                }
                message += `| ${severity} | ${rule} | ${location} | ${line} |\n`;
                count++;
              }
            }
            if (count === 0) {
              message += "‚úÖ No violations found.";
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: message
            });

      # Push event'lerinde Job Summary'e yaz (heredoc ile shell ikamesi sorununu √∂nler)
      - name: Add results to job summary (push only)
        if: ${{ github.event_name == 'push' }}
        run: |
          if [ -f sfca_results.sarif ]; then
            node - <<'NODE'
            const fs = require('fs');
            const r = JSON.parse(fs.readFileSync('sfca_results.sarif','utf8'));
            let m = "### üîé Salesforce Code Analyzer Results (push)\n\n";
            let c = 0;
            for (const run of (r.runs || [])) {
              for (const x of (run.results || [])) {
                const rule = x.ruleId || "Unknown Rule";
                const sev = x.level || "warning";
                const loc = x.locations?.[0]?.physicalLocation?.artifactLocation?.uri || "Unknown file";
                const line = x.locations?.[0]?.physicalLocation?.region?.startLine || "?";
                if (c === 0) {
                  m += "| Severity | Rule | File | Line |\n";
                  m += "|----------|------|------|------|\n";
                }
                m += `| ${sev} | ${rule} | ${loc} | ${line} |\n`;
                c++;
              }
            }
            if (c === 0) {
              m += "‚úÖ No violations found.";
            }
            fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, m);
            NODE
          else
            echo "sfca_results.sarif not found." >> "$GITHUB_STEP_SUMMARY"
          fi
